{
  "description": "Generated by Gemini.",
  "prompt": "Build a complete web application that allows a user to upload their `conversations.json` file (from ChatGPT data export), visualize and manage each thread, and export a cleaned version of the file.\n\nApp Requirements:\n\n1. Upload UI: Allow users to upload a `conversations.json` file.\n2. Parse & Display: Parse the file and display each conversation thread in a scrollable, user-friendly list.\n3. Functionality per Thread:\n   - Show a short summary of the conversation (based on messages content).\n   - Include a delete button to remove threads.\n   - Allow keyword filtering or search.\n   - Optional: Allow editing thread names or metadata.\n4. Export: Add a button to export the modified data as a new `cleaned_conversations.json` file.\n5. Tech Stack: Use modern tools (React + TailwindCSS for frontend, Node.js/Express for backend).\n6. Performance: App must handle large files (1000+ conversations) with minimal lag.\n7. Extra Credit: Display summary stats (e.g., number of threads, deleted items, total word count).\n\nDeliverables:\n- Frontend and backend code\n- Instructions to run the app locally\n- Optional: Make it easy to deploy (e.g., Replit or Vercel ready)",
  "requestFramePermissions": [],
  "name": "ChatTown"
}